//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EntityBehaviorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EntityBehavior), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("OnKnockBarrier", OnKnockBarrier);
		L.RegFunction("AddEffectGameObject", AddEffectGameObject);
		L.RegFunction("RemoveEffectGameObject", RemoveEffectGameObject);
		L.RegFunction("RemoveAllEffectGameObject", RemoveAllEffectGameObject);
		L.RegFunction("CastEffect", CastEffect);
		L.RegFunction("RevertEffect", RevertEffect);
		L.RegFunction("SetLogicSpeed", SetLogicSpeed);
		L.RegFunction("OnNewObject", OnNewObject);
		L.RegFunction("UpdateLogic", UpdateLogic);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("OnRecycle", OnRecycle);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("uid", get_uid, set_uid);
		L.RegVar("sceneid", get_sceneid, set_sceneid);
		L.RegVar("entityType", get_entityType, set_entityType);
		L.RegVar("logicSpeed", get_logicSpeed, set_logicSpeed);
		L.RegVar("isRecyled", get_isRecyled, null);
		L.RegVar("Speed", get_Speed, set_Speed);
		L.RegVar("effectComp", get_effectComp, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnKnockBarrier(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			UnityEngine.BoxCollider arg0 = (UnityEngine.BoxCollider)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.BoxCollider));
			obj.OnKnockBarrier(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEffectGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 9);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Vector3 arg3 = ToLua.ToVector3(L, 5);
			UnityEngine.Vector3 arg4 = ToLua.ToVector3(L, 6);
			UnityEngine.Vector3 arg5 = ToLua.ToVector3(L, 7);
			bool arg6 = LuaDLL.luaL_checkboolean(L, 8);
			bool arg7 = LuaDLL.luaL_checkboolean(L, 9);
			obj.AddEffectGameObject(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEffectGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemoveEffectGameObject(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllEffectGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			obj.RemoveAllEffectGameObject();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CastEffect(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			string arg0 = ToLua.CheckString(L, 2);
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			obj.CastEffect(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RevertEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			obj.RevertEffect();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLogicSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetLogicSpeed(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnNewObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			obj.OnNewObject();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateLogic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.UpdateLogic(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			obj.Destroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnRecycle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EntityBehavior obj = (EntityBehavior)ToLua.CheckObject(L, 1, typeof(EntityBehavior));
			obj.OnRecycle();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			string ret = obj.uid;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index uid on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sceneid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			uint ret = obj.sceneid;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index sceneid on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_entityType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			int ret = obj.entityType;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index entityType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_logicSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			float ret = obj.logicSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index logicSpeed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isRecyled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			bool ret = obj.isRecyled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isRecyled on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			float ret = obj.Speed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Speed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectComp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			EffectComp ret = obj.effectComp;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectComp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.uid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index uid on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sceneid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.sceneid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index sceneid on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_entityType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.entityType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index entityType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_logicSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.logicSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index logicSpeed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EntityBehavior obj = (EntityBehavior)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Speed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Speed on a nil value" : e.Message);
		}
	}
}

