//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ConnectStateWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(ConnectState));
		L.RegVar("Unknown", get_Unknown, null);
		L.RegVar("Success", get_Success, null);
		L.RegVar("Failed", get_Failed, null);
		L.RegVar("Error", get_Error, null);
		L.RegVar("Close", get_Close, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Unknown(IntPtr L)
	{
		ToLua.Push(L, ConnectState.Unknown);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Success(IntPtr L)
	{
		ToLua.Push(L, ConnectState.Success);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Failed(IntPtr L)
	{
		ToLua.Push(L, ConnectState.Failed);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Error(IntPtr L)
	{
		ToLua.Push(L, ConnectState.Error);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Close(IntPtr L)
	{
		ToLua.Push(L, ConnectState.Close);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		ConnectState o = (ConnectState)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

